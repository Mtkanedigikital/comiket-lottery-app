{"version":3,"file":"static/js/375.8c3876da.chunk.js","mappings":"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","sources":["ui/styles.js","api.js","Participant.jsx","locale/ja.js","locale/index.js"],"sourcesContent":["// ============================================================================\n// File: frontend/src/ui/styles.js\n// Version: v0.1_002 (2025-08-21)\n// ============================================================================\n// 仕様:\n// - Admin / Participant 共通の簡易スタイル定義\n// - モバイル優先（最大幅600px、左寄せ）\n// - 入力・ボタン・カード・レイアウト・エラーボックスのユーティリティ\n// ============================================================================\n// 履歴（直近のみ）:\n// - エラーボックス用スタイルを追加\n// ============================================================================\n\nexport const WRAP_STYLE = {\n  maxWidth: 600, // PCでも 600px まで。左寄せで揃える\n  width: \"100%\",\n  margin: 0, // 左寄せ（中央寄せにしない）\n  padding: 16,\n  boxSizing: \"border-box\",\n};\n\nexport const CARD_STYLE = {\n  border: \"1px solid #eee\",\n  borderRadius: 8,\n  padding: 12,\n  marginBottom: 16,\n  width: \"100%\",\n  boxSizing: \"border-box\",\n  background: \"#fff\",\n};\n\nexport const INPUT_STYLE = {\n  width: \"100%\",\n  maxWidth: \"100%\",\n  minWidth: 0,\n  padding: \"8px 10px\",\n  minHeight: 40,\n  fontSize: 16,\n  borderRadius: 6,\n  boxSizing: \"border-box\",\n};\n\nexport const BUTTON_STYLE = {\n  padding: \"12px 14px\",\n  minHeight: 44,\n  fontSize: 16,\n  lineHeight: \"24px\",\n  borderRadius: 8,\n  cursor: \"pointer\",\n  background: \"#2563eb\",\n  color: \"#ffffff\",\n  border: \"1px solid #2563eb\",\n  textDecoration: \"none\",\n  display: \"inline-block\",\n};\n\nexport const LINK_BUTTON_STYLE = {\n  ...BUTTON_STYLE,\n  textDecoration: \"none\",\n};\n\nexport const FIELDSET_STYLE = {\n  display: \"grid\",\n  gap: 8,\n  width: \"100%\",\n  maxWidth: \"100%\",\n  boxSizing: \"border-box\",\n};\n\nexport const ROW_WRAP_STYLE = {\n  display: \"flex\",\n  gap: 8,\n  alignItems: \"center\",\n  flexWrap: \"wrap\",\n};\n\nexport const ERROR_BOX_STYLE = {\n  background: \"#fef2f2\",\n  border: \"1px solid #fecaca\",\n  color: \"#991b1b\",\n  padding: 12,\n  borderRadius: 8,\n  margin: \"8px 0\",\n};\n","// ============================================================================\n// File: frontend/src/api.js\n// Version: v0.1_008 (2025-08-24)\n// ============================================================================\n// Specifications:\n// - axiosインスタンス（baseURL, timeout=10s）\n// - APIラッパ（prizes / entries / check）\n// - GET系にリトライ（最大2回、指数バックオフ）\n// - 管理APIラッパ（x-admin-secret 自動付与）\n// - 管理API小関数（create/publish_now/bulkUpsert/upsert）\n// ============================================================================\n// History (recent only):\n// - 2025-08-24: getEntryCount を三段フォールバック化（/count → /entries?prize_id → /entries/:prizeId）\n// - 2025-08-24: 参加者数取得API getEntryCount(prizeId) を追加\n// - 2025-08-24: 参加者チェックAPIの送信ペイロードを camelCase に統一\n// - 2025-08-24: 参加者チェックAPIの送信先を /api/lottery/check に統一\n// - 2025-08-24: 参加者チェックAPIを /api/check に戻し互換性対応\n// - 2025-08-24: 参加者チェックAPIを /api/lottery/check に変更。送信ペイロードを snake_case に変換\n// - 2025-08-24: 管理APIの認証連携を修正（ADMIN_KEY_STORAGEに加えて 'ADMIN_SECRET' をフォールバック）。prize/entryの作成・更新・削除を adminFetch 経由に統一\n// - 2025-08-24: GET系リトライ導入／axiosインスタンス化とタイムアウト導入\n// ============================================================================\n\nimport axios from \"axios\";\n\n// ベースURL: 環境変数があれば優先、なければ localhost:3001 を既定\nexport const API_BASE =\n  process.env.REACT_APP_API_BASE || \"http://localhost:3001\";\n\n// 共通 axios インスタンス（10秒タイムアウト）\nconst api = axios.create({\n  baseURL: API_BASE,\n  timeout: 10000,\n  withCredentials: false,\n});\n\n// ---- admin auth & fetch ----\nexport const ADMIN_KEY_STORAGE = \"distribution-lottery/admin/secret\";\n// localStorage から管理シークレットを取得（新旧キーの両対応）\nfunction getAdminSecret() {\n  try {\n    if (typeof localStorage === \"undefined\") return \"\";\n    return (\n      localStorage.getItem(ADMIN_KEY_STORAGE) ||\n      localStorage.getItem(\"ADMIN_SECRET\") ||\n      \"\"\n    );\n  } catch (_) {\n    return \"\";\n  }\n}\nexport async function adminFetch(\n  path,\n  { method = \"GET\", headers = {}, body } = {},\n) {\n  const adminKey = getAdminSecret();\n  const h = {\n    ...(headers || {}),\n    ...(adminKey ? { \"x-admin-secret\": adminKey } : {}),\n  };\n  try {\n    const res = await api.request({\n      url: path,\n      method,\n      headers: h,\n      data: body,\n    });\n    return res.data;\n  } catch (e) {\n    // 優先してサーバからのエラーメッセージを返す\n    const msg = e?.response?.data?.error || e?.message || String(e);\n    throw new Error(msg);\n  }\n}\n\n// ---- retry utilities ----\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nasync function requestWithRetry(fn, { retries = 2, backoff = 400 } = {}) {\n  let attempt = 0;\n  for (;;) {\n    try {\n      return await fn();\n    } catch (e) {\n      const status = e?.response?.status;\n      const isNetwork = !e?.response;\n      const retryable = isNetwork || (status >= 500 && status < 600);\n      if (attempt >= retries || !retryable) {\n        throw e;\n      }\n      await sleep(backoff * Math.pow(2, attempt)); // 400ms, 800ms\n      attempt += 1;\n    }\n  }\n}\n\n// ------- prizes -------\nexport async function getPrizes() {\n  const res = await requestWithRetry(() => api.get(\"/api/prizes\"));\n  return res.data;\n}\n\nexport async function getPrize(id) {\n  const res = await requestWithRetry(() =>\n    api.get(`/api/prizes/${encodeURIComponent(id)}`),\n  );\n  return res.data;\n}\n\nexport async function createPrize(data) {\n  return adminFetch(`/api/prizes`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function updatePrize(id, data) {\n  return adminFetch(`/api/prizes/${encodeURIComponent(id)}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function deletePrize(id) {\n  return adminFetch(`/api/prizes/${encodeURIComponent(id)}`, {\n    method: \"DELETE\",\n  });\n}\n\n// ------- entries -------\nexport async function getEntries(prizeId) {\n  const res = await requestWithRetry(() =>\n    api.get(`/api/entries/${encodeURIComponent(prizeId)}`),\n  );\n  return res.data;\n}\n\nexport async function createEntry(data) {\n  return adminFetch(`/api/entries`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function updateEntry(id, data) {\n  return adminFetch(`/api/entries/${encodeURIComponent(id)}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function deleteEntry(id) {\n  return adminFetch(`/api/entries/${encodeURIComponent(id)}`, {\n    method: \"DELETE\",\n  });\n}\n\n// ------- counts -------\n/**\n * 参加者数を返す。優先: /api/entries/count?prize_id=xxx\n * フォールバック: /api/entries?prize_id=xxx の配列長\n */\nexport async function getEntryCount(prizeId) {\n  // 1) 優先: /api/entries/count?prize_id=xxx\n  try {\n    const res = await api.get(`/api/entries/count`, {\n      params: { prize_id: prizeId },\n    });\n    if (typeof res?.data?.count === \"number\") {\n      return res.data.count;\n    }\n  } catch (_e) {\n    // フォールバックへ\n  }\n\n  // 2) 第1フォールバック: /api/entries?prize_id=xxx の配列長\n  try {\n    const list = await api.get(`/api/entries`, {\n      params: { prize_id: prizeId },\n    });\n    if (Array.isArray(list.data)) return list.data.length;\n    if (Array.isArray(list.data?.items)) return list.data.items.length;\n  } catch (_e) {\n    // 次へ\n  }\n\n  // 3) 第2フォールバック: /api/entries/:prizeId の配列長\n  try {\n    const res = await api.get(`/api/entries/${encodeURIComponent(prizeId)}`);\n    if (Array.isArray(res.data)) return res.data.length;\n    if (Array.isArray(res.data?.items)) return res.data.items.length;\n  } catch (_e) {\n    // すべて失敗\n  }\n\n  return 0;\n}\n\n// ------- check -------\nexport async function checkResult({\n  prizeId,\n  prize_id,\n  entryNumber,\n  entry_number,\n  password,\n}) {\n  // 呼び出し互換：camel/snake どちらのキーでも受け取れるようにする\n  const body = {\n    prizeId: prizeId ?? prize_id ?? \"\",\n    entryNumber: entryNumber ?? entry_number ?? \"\",\n    password,\n  };\n  const res = await api.post(\"/api/lottery/check\", body);\n  return res.data;\n}\n\n// ------- admin helpers -------\n// 賞品作成\nexport async function adminCreatePrize({ id, name, result_time_jst }) {\n  return adminFetch(`/api/prizes`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ id, name, result_time_jst }),\n  });\n}\n// すぐ公開\nexport async function adminPublishNow(prizeId) {\n  return adminFetch(`/api/prizes/${encodeURIComponent(prizeId)}/publish_now`, {\n    method: \"POST\",\n  });\n}\n// CSV一括投入\nexport async function adminBulkUpsertEntries({ prize_id, rows, onConflict }) {\n  return adminFetch(`/api/entries/bulk`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ prize_id, rows, onConflict }),\n  });\n}\n// 単票UPSERT\nexport async function adminUpsertEntry(body) {\n  return adminFetch(`/api/entries/upsert`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body),\n  });\n}\n","// ============================================================================\n// File: frontend/src/Participant.jsx\n// Version: v0.1_004 (2025-08-24)\n// ============================================================================\n// Specifications:\n// - URLクエリから prizeId を取得し対象賞品を特定\n// - /api/prizes から対象賞品情報を取得して表示\n// - publish_time_* をJSTで表示（formatPublishJst）\n// - 抽選番号とパスワードを送信し当落を確認\n// ============================================================================\n// History (recent only):\n// - 2025-08-24: ヘッダを公式フォーマットに統一\n// - 2025-08-24: 公開時刻表示を publish_time_* に統一／エラー文言を詳細化\n// - 2025-08-23: 表示文言を participant.* に統一（qr.* から置換）\n// ============================================================================\n\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getPrizes, checkResult } from \"./api\";\nimport { ERROR_BOX_STYLE } from \"./ui/styles\";\nimport t from \"./locale\";\n\nconst BUTTON_STYLE = {\n  padding: \"12px 14px\",\n  minHeight: 44,\n  fontSize: 16,\n  lineHeight: \"24px\",\n  borderRadius: 8,\n  cursor: \"pointer\",\n  background: \"#2563eb\",\n  color: \"#ffffff\",\n  border: \"1px solid #2563eb\",\n  textDecoration: \"none\",\n  display: \"inline-block\",\n};\n\nconst INPUT_STYLE = {\n  width: \"100%\",\n  maxWidth: \"100%\",\n  minWidth: 0,\n  padding: \"8px 10px\",\n  minHeight: 40,\n  fontSize: 16,\n  borderRadius: 6,\n  boxSizing: \"border-box\",\n};\n\nconst WRAP_STYLE = {\n  maxWidth: 600,\n  width: \"100%\",\n  margin: 0, // 左寄せ（中央寄せを解除）\n  padding: 16,\n  boxSizing: \"border-box\",\n};\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\n// \"2025-08-19 13:00\" → t('prizes.publishAt', \"2025/08/19 13:00\")\nfunction formatJstDate(str) {\n  try {\n    if (!str || typeof str !== \"string\")\n      return t(\"prizes.publishAt\", str ?? \"\");\n    const [datePart, timePartRaw] = str.trim().split(/\\s+/);\n    const [y, m, d] = datePart.split(\"-\");\n    const timePart = (timePartRaw || \"\").slice(0, 5);\n    if (!y || !m || !d || !timePart) return t(\"prizes.publishAt\", str);\n    const jst = `${y}/${m}/${d} ${timePart}`;\n    return t(\"prizes.publishAt\", jst);\n  } catch {\n    return t(\"prizes.publishAt\", str);\n  }\n}\n\n// UTC ISO → \"YYYY-MM-DD HH:mm\"（JST）へ変換\nfunction utcIsoToJstYmdHm(iso) {\n  try {\n    const d = new Date(iso);\n    if (Number.isNaN(d.getTime())) return \"\";\n    const ms = d.getTime() + 9 * 60 * 60 * 1000; // +09:00\n    const z = new Date(ms).toISOString(); // 例: 2025-08-24T03:00:00.000Z\n    return z.slice(0, 16).replace(\"T\", \" \"); // \"YYYY-MM-DD HH:mm\"\n  } catch {\n    return \"\";\n  }\n}\n\n// 賞品の公開時刻をJST表記で取得（publish_time_jst 優先）\nfunction formatPublishJst(prize) {\n  if (!prize) return \"\";\n  if (prize.publish_time_jst) {\n    // ハイフン/スラッシュ揺れを吸収して既存フォーマッタに渡す\n    return formatJstDate(String(prize.publish_time_jst).replace(/\\//g, \"-\"));\n  }\n  if (prize.publish_time_utc) {\n    const jst = utcIsoToJstYmdHm(prize.publish_time_utc);\n    return t(\"prizes.publishAt\", jst || \"\");\n  }\n  return \"\";\n}\n\nexport default function Participant() {\n  const query = useQuery();\n  const navigate = useNavigate();\n  const prizeId = query.get(\"prizeId\");\n\n  const [prize, setPrize] = useState(null);\n  const [entryNumber, setEntryNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // prizeId が無ければ /prizes へ誘導\n  useEffect(() => {\n    if (!prizeId) navigate(\"/prizes\", { replace: true });\n  }, [prizeId, navigate]);\n\n  // 賞品情報の取得（名前・公開時刻）\n  useEffect(() => {\n    if (!prizeId) return;\n    (async () => {\n      setLoading(true);\n      try {\n        const list = await getPrizes();\n        const found = Array.isArray(list)\n          ? list.find((x) => x.id === prizeId)\n          : null;\n        if (found) setPrize(found);\n      } catch (e) {\n        setErr(e?.response?.data?.message || e?.message || String(e));\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [prizeId]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setErr(\"\");\n    try {\n      const data = await checkResult({ prizeId, entryNumber, password });\n      setMessage(data?.result || \"OK\");\n    } catch (e) {\n      setErr(e?.response?.data?.message || e?.message || String(e));\n    }\n  };\n\n  if (loading) {\n    return <div style={WRAP_STYLE}>{t(\"common.loading\")}</div>;\n  }\n\n  if (err) {\n    return (\n      <div style={WRAP_STYLE}>\n        <div style={ERROR_BOX_STYLE}>\n          {t(\"common.errorPrefix\")}\n          {err}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={WRAP_STYLE}>\n      {!prize && <div style={{ padding: 16 }}>{t(\"participant.noData\")}</div>}\n      <h2>{t(\"participant.title\", prize?.name || \"\")}</h2>\n      {prize && (\n        <div style={{ marginBottom: 12 }}>\n          <div>\n            <strong>{t(\"participant.prizeIdPrefix\")}</strong> {prize.id}\n          </div>\n          <div>\n            <strong>{t(\"participant.prizeNamePrefix\")}</strong> {prize.name}\n          </div>\n          <div>\n            <strong>{formatPublishJst(prize)}</strong>\n          </div>\n        </div>\n      )}\n\n      {err && (\n        <div style={ERROR_BOX_STYLE}>\n          {t(\"common.errorPrefix\")}\n          {err}\n        </div>\n      )}\n\n      <form\n        onSubmit={onSubmit}\n        style={{ display: \"grid\", gap: 8, maxWidth: \"100%\" }}\n      >\n        <label>\n          抽選番号\n          <input\n            value={entryNumber}\n            onChange={(e) => setEntryNumber(e.target.value)}\n            placeholder={t(\"participant.entryPlaceholder\")}\n            required\n            style={INPUT_STYLE}\n          />\n        </label>\n\n        <label>\n          パスワード\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder={t(\"participant.passwordPlaceholder\")}\n            required\n            style={INPUT_STYLE}\n          />\n        </label>\n\n        <button type=\"submit\" style={BUTTON_STYLE}>\n          {t(\"participant.submit\")}\n        </button>\n      </form>\n\n      {message && (\n        <p style={{ marginTop: 12, fontWeight: 600 }}>\n          {t(\"participant.resultPrefix\")}\n          {message}\n        </p>\n      )}\n    </div>\n  );\n}\n","// ============================================================================\n// File: frontend/src/locale/ja.js\n// Version: v0.1_007 (2025-08-26)\n// ============================================================================\n// 仕様:\n// - 日本語ロケール定義\n// - 画面文言やメッセージを集約\n// ============================================================================\n// 履歴（直近のみ）:\n// - 2025-08-26: participant.resultPrefix をフラグ切替対応（REACT_APP_FLAGS=participant_text_v2）\n// - 新規作成\n// - QRPage/Participant 固定文言の辞書キーを追加\n// - 2025-08-23: QRPage 用の辞書キー（submit / entryPlaceholder / passwordPlaceholder）を追加\n// - 2025-08-23: qr.prizeIdPrefix を追加\n// - 2025-08-24: participant のエイリアスキー（prizeIdPrefix / prizeNamePrefix / publishedAtJST / entryPlaceholder / passwordPlaceholder / submit）を追加\n// - 2025-08-24: admin.title.csvUpload と admin.hint.defaultTime を追加\n// ============================================================================\n\nconst ja = {\n  app: {\n    title: \"配布抽選システム\",\n    nav: {\n      prizes: \"抽選予定（参加者向け）\",\n      adminList: \"管理：賞品一覧・作成\",\n      adminDebug: \"（開発者向け）デバッグ\",\n    },\n  },\n  prizes: {\n    title: \"抽選予定（参加者向け）\",\n    note: \"公開日時（JST）以降に、各賞品ページで抽選結果を確認できます。\",\n    empty:\n      \"現在、公開予定の抽選はありません。しばらくしてから再度ご確認ください。\",\n    publishAt: (txt) => `公開日時（JST）: ${txt}`,\n    openParticipant: \"参加者ページを開く\",\n    saveQrPng: \"QRコードをPNGで保存\",\n    errorNetwork:\n      \"ネットワークエラーが発生しました。時間をおいて再度お試しください。\",\n    errorGeneric: \"取得に失敗しました。時間をおいて再度お試しください。\",\n  },\n  participant: {\n    title: \"抽選結果確認\",\n    resultPrefix: (process.env.REACT_APP_FLAGS || \"\").includes(\n      \"participant_text_v2\",\n    )\n      ? \"当落結果：\"\n      : \"結果：\",\n    // --- aliases for components that reference flat keys ---\n    prizeIdPrefix: \"賞品ID\",\n    prizeNamePrefix: \"賞品名\",\n    publishedAtJST: \"公開日時（JST）\",\n    entryPlaceholder: \"抽選番号（例: 001）\",\n    passwordPlaceholder: \"パスワード（例: 1111）\",\n    submit: \"抽選結果を確認する\",\n    labels: {\n      entryNumber: \"エントリー番号\",\n      password: \"パスワード\",\n    },\n    hint: \"エントリー番号とパスワードは配布物のQRコード横をご確認ください。\",\n    check: \"結果を確認する\",\n    result: {\n      win: (name) => `🎉 おめでとうございます！「${name}」に当選しました！`,\n      lose: (name) => `残念ながら「${name}」には当選しませんでした。`,\n      notPublished:\n        \"抽選結果はまだ公開されていません。公開日時（JST）以降に再度お試しください。\",\n      notFound:\n        \"エントリーが見つかりません。番号とパスワードをご確認ください。\",\n      required: \"エントリー番号とパスワードを入力してください。\",\n    },\n    form: {\n      intro: \"抽選番号とパスワードを入力して結果を確認してください。\",\n      entryPlaceholder: \"抽選番号（例: 001）\",\n      passwordPlaceholder: \"パスワード（例: 1111）\",\n      submit: \"抽選結果を確認する\",\n    },\n    state: {\n      noData: \"データがありません。\",\n    },\n    prefix: {\n      result: \"結果：\",\n      prizeId: \"賞品ID：\",\n    },\n  },\n  qr: {\n    title: \"QRページ\",\n    prizeIdPrefix: \"賞品ID\",\n    entryPlaceholder: \"抽選番号（例: 001）\",\n    passwordPlaceholder: \"パスワード（例: 1111）\",\n    submit: \"抽選結果を確認する\",\n    errorNetwork:\n      \"ネットワークエラーが発生しました。時間をおいて再度お試しください。\",\n    errorGeneric: \"処理に失敗しました。時間をおいて再度お試しください。\",\n  },\n  admin: {\n    title: {\n      prizeList: \"管理：賞品一覧・作成\",\n      createPrize: \"賞品の新規作成\",\n      upsertManual: \"単票 UPSERT（手動）\",\n      csvUpload: \"参加者エントリー一括投入（CSV）\",\n    },\n    label: {\n      secret: \"管理シークレット（ADMIN_SECRET）\",\n      unpublishedFirst: \"未公開を上に並べ替える\",\n      prizeId: \"賞品ID（例: B002）\",\n      prizeName: \"賞品名\",\n      publishAt: \"公開日時（JST）\",\n      targetPrizeId: \"対象の賞品ID\",\n      conflictPolicy: \"重複時の動作\",\n      prizeIdShort: \"賞品ID\",\n      entryNumber: \"抽選番号\",\n      password: \"パスワード\",\n      isWinner: \"当選\",\n    },\n    placeholder: {\n      secret: \"ここに管理シークレットを入力（ローカル保存）\",\n      prizeId: \"B002\",\n      prizeName: \"○○賞\",\n    },\n    help: {\n      secret:\n        \"ブラウザの <code>localStorage</code> に保存され、管理API呼び出し時に <code>x-admin-secret</code> ヘッダで送信されます。\",\n      csvFormat: \"CSVフォーマット（1行目は必ずヘッダ）：\",\n      defaultTime: \"ヒント：初期値は現時間＋1時間（JST）の表記です。\",\n    },\n    hint: { defaultTime: \"ヒント：初期値は現時間＋1時間（JST）の表記です。\" },\n    button: {\n      creating: \"作成中…\",\n      create: \"作成する\",\n      downloadSampleCsv: \"サンプルCSVを保存\",\n      sending: \"送信中…\",\n      upsert: \"UPSERT 実行\",\n      publishNow: \"公開時刻を今にする\",\n    },\n    option: {\n      selectPrize: \"-- 選択してください --\",\n      ignore: \"既存を維持（新規のみ追加）\",\n      upsert: \"上書き（パスワード/当落を更新）\",\n    },\n    state: {\n      uploading: \"アップロード中…\",\n      noPrizes: \"賞品がありません。\",\n    },\n    link: {\n      participantPage: \"参加者ページを開く\",\n    },\n    create: {\n      section: \"賞品の新規作成\",\n      id: \"賞品ID（例: B002）\",\n      name: \"賞品名\",\n      publishAt: \"公開日時（JST）※現在時刻＋1時間が初期値\",\n      submit: \"賞品を作成\",\n    },\n    csv: {\n      section: \"参加者エントリーの一括投入（CSV）\",\n      prizeId: \"対象の賞品ID（例: B001）\",\n      modeKeep: \"既存を維持（新規のみ追加）\",\n      sampleTitle: \"CSVフォーマット（1行目は必ずヘッダ）：\",\n      sampleCode:\n        \"entry_number,password,is_winner\\n001,1111,true\\n002,2222,false\",\n    },\n    card: {\n      publishAt: (txt) => `公開日時（JST）: ${txt}`,\n      openParticipant: \"参加者ページを開く\",\n      saveQrPng: \"QRコードをPNGで保存\",\n      edit: \"編集\",\n    },\n    edit: {\n      title: \"管理：賞品編集\",\n      name: \"賞品名\",\n      publishAt: \"公開日時（JST）\",\n      save: \"変更を保存\",\n      delete: \"この賞品を削除\",\n      confirmDelete: \"本当に削除しますか？参加者エントリーも削除されます。\",\n    },\n    toast: {\n      saved: \"保存しました。\",\n      created: \"作成しました。\",\n      imported: \"CSVを取り込みました。\",\n      authFail: \"認証に失敗しました。管理シークレットを確認してください。\",\n      network: \"通信エラーが発生しました。時間をおいて再度お試しください。\",\n      invalid: \"入力内容に誤りがあります。赤い項目を修正してください。\",\n      createSuccess: \"作成しました。\",\n      createFail: \"作成に失敗しました。\",\n      publishUpdated: (txt) => `公開時刻を更新: ${txt}`,\n      publishFail: \"公開に失敗しました。\",\n      csvResult: (msg) => `CSV処理結果: ${msg}`,\n      csvFail: \"CSVの処理に失敗しました。\",\n      upsertSuccess: \"登録しました。\",\n      upsertFail: \"登録に失敗しました。\",\n      secretSaved: \"管理者シークレットを保存しました。\",\n      secretCleared: \"管理者シークレットを削除しました。\",\n    },\n  },\n  common: {\n    required: \"必須\",\n    cancel: \"キャンセル\",\n    close: \"閉じる\",\n    loading: \"読み込み中です…\",\n    retry: \"再読み込み\",\n    errorPrefix: \"エラー: \",\n    network:\n      \"ネットワークエラーが発生しました。時間をおいて再度お試しください。\",\n    server: \"サーバーでエラーが発生しました。時間をおいて再度お試しください。\",\n  },\n  format: {\n    // 例: format.publishJst(\"2025/08/19 13:00\")\n    publishJst: (txt) => `公開日時（JST）: ${txt}`,\n  },\n};\n\nexport default ja;\n","// ============================================================================\n// File: frontend/src/locale/index.js\n// Version: v0.1_001 (2025-08-21)\n// ============================================================================\n// 仕様:\n// - 日本語ロケール用の t 関数を提供\n// - 与えられたパス文字列を ja オブジェクトから辿って翻訳を取得\n// - 関数の場合は引数を渡して評価\n// ============================================================================\n// 履歴（直近のみ）:\n// - 新規作成\n// ============================================================================\n// frontend/src/locale/index.js\nimport ja from \"./ja\";\n\n// 単純な t 関数（今回は日本語固定）\nexport const t = (path, ...args) => {\n  const segs = path.split(\".\");\n  let cur = ja;\n  for (const s of segs) {\n    if (cur == null) return path;\n    cur = cur[s];\n  }\n  if (typeof cur === \"function\") return cur(...args);\n  return cur ?? path;\n};\n\n// --- compatibility export (named + default) ---\nexport default t;\n"],"names":["WRAP_STYLE","maxWidth","width","margin","padding","boxSizing","CARD_STYLE","border","borderRadius","marginBottom","background","INPUT_STYLE","minWidth","minHeight","fontSize","BUTTON_STYLE","lineHeight","cursor","color","textDecoration","display","ERROR_BOX_STYLE","_objectSpread","api","axios","create","baseURL","process","timeout","withCredentials","ADMIN_KEY_STORAGE","async","adminFetch","path","method","headers","body","arguments","length","undefined","adminKey","localStorage","getItem","_","getAdminSecret","h","request","url","data","e","_e$response","_e$response$data","msg","response","error","message","String","Error","sleep","ms","Promise","r","setTimeout","requestWithRetry","fn","retries","backoff","attempt","_e$response2","status","isNetwork","Math","pow","getPrizes","get","getEntryCount","prizeId","_res$data","res","params","prize_id","count","_e","_list$data","list","Array","isArray","items","_res$data2","concat","encodeURIComponent","checkResult","_ref","_ref2","_ref3","entryNumber","entry_number","password","post","adminCreatePrize","_ref4","id","name","result_time_jst","JSON","stringify","adminPublishNow","adminBulkUpsertEntries","_ref5","rows","onConflict","adminUpsertEntry","formatPublishJst","prize","publish_time_jst","str","t","datePart","timePartRaw","trim","split","y","m","d","timePart","slice","jst","_unused","formatJstDate","replace","publish_time_utc","iso","Date","Number","isNaN","getTime","toISOString","_unused2","utcIsoToJstYmdHm","Participant","query","URLSearchParams","useLocation","search","navigate","useNavigate","setPrize","useState","setEntryNumber","setPassword","setMessage","err","setErr","loading","setLoading","useEffect","found","find","x","_jsx","style","children","_jsxs","onSubmit","preventDefault","result","_e$response2$data","gap","value","onChange","target","placeholder","required","type","marginTop","fontWeight","app","title","nav","prizes","adminList","adminDebug","note","empty","publishAt","txt","openParticipant","saveQrPng","errorNetwork","errorGeneric","participant","resultPrefix","includes","prizeIdPrefix","prizeNamePrefix","publishedAtJST","entryPlaceholder","passwordPlaceholder","submit","labels","hint","check","win","lose","notPublished","notFound","form","intro","state","noData","prefix","qr","admin","prizeList","createPrize","upsertManual","csvUpload","label","secret","unpublishedFirst","prizeName","targetPrizeId","conflictPolicy","prizeIdShort","isWinner","help","csvFormat","defaultTime","button","creating","downloadSampleCsv","sending","upsert","publishNow","option","selectPrize","ignore","uploading","noPrizes","link","participantPage","section","csv","modeKeep","sampleTitle","sampleCode","card","edit","save","delete","confirmDelete","toast","saved","created","imported","authFail","network","invalid","createSuccess","createFail","publishUpdated","publishFail","csvResult","csvFail","upsertSuccess","upsertFail","secretSaved","secretCleared","common","cancel","close","retry","errorPrefix","server","format","publishJst","_cur","segs","cur","ja","s","_len","args","_key"],"sourceRoot":""}