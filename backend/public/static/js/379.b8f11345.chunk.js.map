{"version":3,"file":"static/js/379.b8f11345.chunk.js","mappings":"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","sources":["ui/styles.js","api.js","utils/datetime.js","components/admin/QrCard.jsx","components/admin/PublishedBadge.jsx","Admin.jsx","utils/csv.js","locale/ja.js","locale/index.js"],"sourcesContent":["// ============================================================================\n// File: frontend/src/ui/styles.js\n// Version: v0.1_002 (2025-08-21)\n// ============================================================================\n// 仕様:\n// - Admin / Participant 共通の簡易スタイル定義\n// - モバイル優先（最大幅600px、左寄せ）\n// - 入力・ボタン・カード・レイアウト・エラーボックスのユーティリティ\n// ============================================================================\n// 履歴（直近のみ）:\n// - エラーボックス用スタイルを追加\n// ============================================================================\n\nexport const WRAP_STYLE = {\n  maxWidth: 600, // PCでも 600px まで。左寄せで揃える\n  width: \"100%\",\n  margin: 0, // 左寄せ（中央寄せにしない）\n  padding: 16,\n  boxSizing: \"border-box\",\n};\n\nexport const CARD_STYLE = {\n  border: \"1px solid #eee\",\n  borderRadius: 8,\n  padding: 12,\n  marginBottom: 16,\n  width: \"100%\",\n  boxSizing: \"border-box\",\n  background: \"#fff\",\n};\n\nexport const INPUT_STYLE = {\n  width: \"100%\",\n  maxWidth: \"100%\",\n  minWidth: 0,\n  padding: \"8px 10px\",\n  minHeight: 40,\n  fontSize: 16,\n  borderRadius: 6,\n  boxSizing: \"border-box\",\n};\n\nexport const BUTTON_STYLE = {\n  padding: \"12px 14px\",\n  minHeight: 44,\n  fontSize: 16,\n  lineHeight: \"24px\",\n  borderRadius: 8,\n  cursor: \"pointer\",\n  background: \"#2563eb\",\n  color: \"#ffffff\",\n  border: \"1px solid #2563eb\",\n  textDecoration: \"none\",\n  display: \"inline-block\",\n};\n\nexport const LINK_BUTTON_STYLE = {\n  ...BUTTON_STYLE,\n  textDecoration: \"none\",\n};\n\nexport const FIELDSET_STYLE = {\n  display: \"grid\",\n  gap: 8,\n  width: \"100%\",\n  maxWidth: \"100%\",\n  boxSizing: \"border-box\",\n};\n\nexport const ROW_WRAP_STYLE = {\n  display: \"flex\",\n  gap: 8,\n  alignItems: \"center\",\n  flexWrap: \"wrap\",\n};\n\nexport const ERROR_BOX_STYLE = {\n  background: \"#fef2f2\",\n  border: \"1px solid #fecaca\",\n  color: \"#991b1b\",\n  padding: 12,\n  borderRadius: 8,\n  margin: \"8px 0\",\n};\n","// ============================================================================\n// File: frontend/src/api.js\n// Version: v0.1_008 (2025-08-24)\n// ============================================================================\n// Specifications:\n// - axiosインスタンス（baseURL, timeout=10s）\n// - APIラッパ（prizes / entries / check）\n// - GET系にリトライ（最大2回、指数バックオフ）\n// - 管理APIラッパ（x-admin-secret 自動付与）\n// - 管理API小関数（create/publish_now/bulkUpsert/upsert）\n// ============================================================================\n// History (recent only):\n// - 2025-08-24: getEntryCount を三段フォールバック化（/count → /entries?prize_id → /entries/:prizeId）\n// - 2025-08-24: 参加者数取得API getEntryCount(prizeId) を追加\n// - 2025-08-24: 参加者チェックAPIの送信ペイロードを camelCase に統一\n// - 2025-08-24: 参加者チェックAPIの送信先を /api/lottery/check に統一\n// - 2025-08-24: 参加者チェックAPIを /api/check に戻し互換性対応\n// - 2025-08-24: 参加者チェックAPIを /api/lottery/check に変更。送信ペイロードを snake_case に変換\n// - 2025-08-24: 管理APIの認証連携を修正（ADMIN_KEY_STORAGEに加えて 'ADMIN_SECRET' をフォールバック）。prize/entryの作成・更新・削除を adminFetch 経由に統一\n// - 2025-08-24: GET系リトライ導入／axiosインスタンス化とタイムアウト導入\n// ============================================================================\n\nimport axios from \"axios\";\n\n// ベースURL: 環境変数があれば優先、なければ localhost:3001 を既定\nexport const API_BASE =\n  process.env.REACT_APP_API_BASE || \"http://localhost:3001\";\n\n// 共通 axios インスタンス（10秒タイムアウト）\nconst api = axios.create({\n  baseURL: API_BASE,\n  timeout: 10000,\n  withCredentials: false,\n});\n\n// ---- admin auth & fetch ----\nexport const ADMIN_KEY_STORAGE = \"distribution-lottery/admin/secret\";\n// localStorage から管理シークレットを取得（新旧キーの両対応）\nfunction getAdminSecret() {\n  try {\n    if (typeof localStorage === \"undefined\") return \"\";\n    return (\n      localStorage.getItem(ADMIN_KEY_STORAGE) ||\n      localStorage.getItem(\"ADMIN_SECRET\") ||\n      \"\"\n    );\n  } catch (_) {\n    return \"\";\n  }\n}\nexport async function adminFetch(\n  path,\n  { method = \"GET\", headers = {}, body } = {},\n) {\n  const adminKey = getAdminSecret();\n  const h = {\n    ...(headers || {}),\n    ...(adminKey ? { \"x-admin-secret\": adminKey } : {}),\n  };\n  try {\n    const res = await api.request({\n      url: path,\n      method,\n      headers: h,\n      data: body,\n    });\n    return res.data;\n  } catch (e) {\n    // 優先してサーバからのエラーメッセージを返す\n    const msg = e?.response?.data?.error || e?.message || String(e);\n    throw new Error(msg);\n  }\n}\n\n// ---- retry utilities ----\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nasync function requestWithRetry(fn, { retries = 2, backoff = 400 } = {}) {\n  let attempt = 0;\n  for (;;) {\n    try {\n      return await fn();\n    } catch (e) {\n      const status = e?.response?.status;\n      const isNetwork = !e?.response;\n      const retryable = isNetwork || (status >= 500 && status < 600);\n      if (attempt >= retries || !retryable) {\n        throw e;\n      }\n      await sleep(backoff * Math.pow(2, attempt)); // 400ms, 800ms\n      attempt += 1;\n    }\n  }\n}\n\n// ------- prizes -------\nexport async function getPrizes() {\n  const res = await requestWithRetry(() => api.get(\"/api/prizes\"));\n  return res.data;\n}\n\nexport async function getPrize(id) {\n  const res = await requestWithRetry(() =>\n    api.get(`/api/prizes/${encodeURIComponent(id)}`),\n  );\n  return res.data;\n}\n\nexport async function createPrize(data) {\n  return adminFetch(`/api/prizes`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function updatePrize(id, data) {\n  return adminFetch(`/api/prizes/${encodeURIComponent(id)}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function deletePrize(id) {\n  return adminFetch(`/api/prizes/${encodeURIComponent(id)}`, {\n    method: \"DELETE\",\n  });\n}\n\n// ------- entries -------\nexport async function getEntries(prizeId) {\n  const res = await requestWithRetry(() =>\n    api.get(`/api/entries/${encodeURIComponent(prizeId)}`),\n  );\n  return res.data;\n}\n\nexport async function createEntry(data) {\n  return adminFetch(`/api/entries`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function updateEntry(id, data) {\n  return adminFetch(`/api/entries/${encodeURIComponent(id)}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function deleteEntry(id) {\n  return adminFetch(`/api/entries/${encodeURIComponent(id)}`, {\n    method: \"DELETE\",\n  });\n}\n\n// ------- counts -------\n/**\n * 参加者数を返す。優先: /api/entries/count?prize_id=xxx\n * フォールバック: /api/entries?prize_id=xxx の配列長\n */\nexport async function getEntryCount(prizeId) {\n  // 1) 優先: /api/entries/count?prize_id=xxx\n  try {\n    const res = await api.get(`/api/entries/count`, {\n      params: { prize_id: prizeId },\n    });\n    if (typeof res?.data?.count === \"number\") {\n      return res.data.count;\n    }\n  } catch (_e) {\n    // フォールバックへ\n  }\n\n  // 2) 第1フォールバック: /api/entries?prize_id=xxx の配列長\n  try {\n    const list = await api.get(`/api/entries`, {\n      params: { prize_id: prizeId },\n    });\n    if (Array.isArray(list.data)) return list.data.length;\n    if (Array.isArray(list.data?.items)) return list.data.items.length;\n  } catch (_e) {\n    // 次へ\n  }\n\n  // 3) 第2フォールバック: /api/entries/:prizeId の配列長\n  try {\n    const res = await api.get(`/api/entries/${encodeURIComponent(prizeId)}`);\n    if (Array.isArray(res.data)) return res.data.length;\n    if (Array.isArray(res.data?.items)) return res.data.items.length;\n  } catch (_e) {\n    // すべて失敗\n  }\n\n  return 0;\n}\n\n// ------- check -------\nexport async function checkResult({\n  prizeId,\n  prize_id,\n  entryNumber,\n  entry_number,\n  password,\n}) {\n  // 呼び出し互換：camel/snake どちらのキーでも受け取れるようにする\n  const body = {\n    prizeId: prizeId ?? prize_id ?? \"\",\n    entryNumber: entryNumber ?? entry_number ?? \"\",\n    password,\n  };\n  const res = await api.post(\"/api/lottery/check\", body);\n  return res.data;\n}\n\n// ------- admin helpers -------\n// 賞品作成\nexport async function adminCreatePrize({ id, name, result_time_jst }) {\n  return adminFetch(`/api/prizes`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ id, name, result_time_jst }),\n  });\n}\n// すぐ公開\nexport async function adminPublishNow(prizeId) {\n  return adminFetch(`/api/prizes/${encodeURIComponent(prizeId)}/publish_now`, {\n    method: \"POST\",\n  });\n}\n// CSV一括投入\nexport async function adminBulkUpsertEntries({ prize_id, rows, onConflict }) {\n  return adminFetch(`/api/entries/bulk`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ prize_id, rows, onConflict }),\n  });\n}\n// 単票UPSERT\nexport async function adminUpsertEntry(body) {\n  return adminFetch(`/api/entries/upsert`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body),\n  });\n}\n","// ============================================================================\n// File: frontend/src/utils/datetime.js\n// Version: v0.1_001 (2025-08-21)\n// ============================================================================\n// 仕様:\n// - JST日時の整形表示ユーティリティ\n// - 管理フォーム用の初期日時（JST+1時間）生成\n// ============================================================================\n// 履歴（直近のみ）:\n// - 初版作成（Admin.jsx から切り出し）\n// ============================================================================\n\n/** \"2025-08-19 13:00\" → \"公開日: 2025/08/19 13:00\" */\nexport function formatJstDate(str) {\n  try {\n    if (!str || typeof str !== \"string\") return `公開日: ${str ?? \"\"}`;\n    const [datePart, timePartRaw] = str.trim().split(/\\s+/);\n    const [y, m, d] = (datePart || \"\").split(\"-\");\n    const timePart = (timePartRaw || \"\").slice(0, 5);\n    if (!y || !m || !d || !timePart) return `公開日: ${str}`;\n    return `公開日: ${y}/${m}/${d} ${timePart}`;\n  } catch {\n    return `公開日: ${str}`;\n  }\n}\n\n/** 管理フォーム初期値: 現在のJST + 1時間 を datetime-local 形式で返す */\nexport function jstLocalInputValue(offsetMinutes = 60) {\n  const now = new Date();\n  const jstMs = now.getTime() + 9 * 60 * 60 * 1000 + offsetMinutes * 60 * 1000;\n  const jst = new Date(jstMs);\n  const y = jst.getUTCFullYear();\n  const m = String(jst.getUTCMonth() + 1).padStart(2, \"0\");\n  const d = String(jst.getUTCDate()).padStart(2, \"0\");\n  const hh = String(jst.getUTCHours()).padStart(2, \"0\");\n  const mm = String(jst.getUTCMinutes()).padStart(2, \"0\");\n  return `${y}-${m}-${d}T${hh}:${mm}`;\n}\n","// ============================================================================\n// File: frontend/src/components/admin/QrCard.jsx\n// Version: v0.1_001 (2025-08-21)\n// ============================================================================\n// 仕様:\n// - 賞品ごとのQRコード表示とPNG保存ボタン\n// ============================================================================\n// 履歴（直近のみ）:\n// - 初版作成（Admin.jsx から切り出し）\n// ============================================================================\n\nimport React from \"react\";\nimport QRCode from \"react-qr-code\";\nimport * as QR from \"qrcode\";\nimport { formatJstDate } from \"../../utils/datetime\";\nimport { BUTTON_STYLE } from \"../../ui/styles\";\n\nexport default function QrCard({ prize }) {\n  const participantUrl = `${window.location.origin}/p?prizeId=${encodeURIComponent(prize.id)}`;\n\n  const downloadQR = async () => {\n    try {\n      const qrPngDataUrl = await QR.toDataURL(participantUrl, {\n        errorCorrectionLevel: \"M\",\n        margin: 1,\n        scale: 8,\n      });\n      const img = new Image();\n      img.onload = () => {\n        const qrTarget = 256;\n        const padding = 24;\n        const textLineHeight = 18;\n        const extraTextLines = 2;\n        const extraHeight = extraTextLines * textLineHeight + padding;\n\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = qrTarget + padding * 2;\n        canvas.height = qrTarget + padding * 2 + extraHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.imageSmoothingEnabled = false;\n\n        ctx.fillStyle = \"#fff\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        const x = (canvas.width - qrTarget) / 2;\n        const y = (canvas.height - extraHeight - qrTarget) / 2;\n        ctx.drawImage(img, x, y, qrTarget, qrTarget);\n\n        ctx.fillStyle = \"#000\";\n        ctx.font =\n          \"14px 'Hiragino Sans','Noto Sans JP',system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif\";\n        const textYStart = qrTarget + padding * 2 + textLineHeight / 2;\n        ctx.fillText(`賞品ID: ${prize.id}`, padding, textYStart);\n        ctx.fillText(\n          formatJstDate(prize.result_time_jst),\n          padding,\n          textYStart + textLineHeight,\n        );\n\n        const pngUrl = canvas.toDataURL(\"image/png\");\n        const a = document.createElement(\"a\");\n        a.href = pngUrl;\n        a.download = `qr_${prize.id}.png`;\n        a.click();\n      };\n      img.onerror = () =>\n        alert(\"QRのPNG変換に失敗しました（画像読み込みエラー）\");\n      img.src = qrPngDataUrl;\n    } catch (e) {\n      console.error(\"downloadQR error:\", e);\n      alert(\n        \"QRのPNG変換に失敗しました（例外）。コンソールを確認してください。\",\n      );\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <QRCode value={participantUrl} size={128} />\n      <div style={{ marginTop: 8 }}>\n        <button onClick={downloadQR} style={BUTTON_STYLE}>\n          QRをPNG保存\n        </button>\n      </div>\n    </div>\n  );\n}\n","// ============================================================================\n// File: frontend/src/components/admin/PublishedBadge.jsx\n// Version: v0.1_001 (2025-08-21)\n// ============================================================================\n// 仕様:\n// - 公開状態（公開済み/未公開）を示す小さなステータスバッジ\n// ============================================================================\n// 履歴（直近のみ）:\n// - 初版作成（Admin.jsx から切り出し）\n// ============================================================================\n\nimport React from \"react\";\n\nexport default function PublishedBadge({ published }) {\n  const base = {\n    display: \"inline-block\",\n    fontSize: 12,\n    padding: \"2px 8px\",\n    borderRadius: 999,\n    marginLeft: 8,\n    verticalAlign: \"middle\",\n  };\n  return published ? (\n    <span\n      style={{\n        ...base,\n        color: \"#14532d\",\n        background: \"#dcfce7\",\n        border: \"1px solid #86efac\",\n      }}\n    >\n      公開済み\n    </span>\n  ) : (\n    <span\n      style={{\n        ...base,\n        color: \"#7c2d12\",\n        background: \"#ffedd5\",\n        border: \"1px solid #fdba74\",\n      }}\n    >\n      未公開\n    </span>\n  );\n}\n","// ============================================================================\n// File: frontend/src/Admin.jsx\n// Version: v0.1_015 (2025-08-24)\n// ============================================================================\n// 仕様:\n// - 管理画面（賞品一覧、作成、公開操作、参加者エントリー管理）\n// - CSV一括投入や手動UPSERTによるエントリー管理\n// - QRコード生成とPNG保存\n// ============================================================================\n// 履歴（直近のみ）:\n// - 共通スタイル(ui/styles)を適用し、ローカル定義を削除（ボタン/入力/セクション幅の統一）\n// - CSVの「ファイルを選択」ボタンを他ボタンと同サイズに統一（label + hidden input化）\n// - iOS Safariで日時入力が枠からはみ出す問題を修正（幅を100%・最小幅0・外観調整）\n// - 管理API小関数（api.js）を利用し、adminFetch 直呼びを整理\n// - 日付/CSVユーティリティを utils/ 配下へ分離し、import に切替\n// - PublishedBadge コンポーネントを components/admin/ に分離\n// - QrCard コンポーネントを components/admin/ に分離\n// - Adminのトースト/エラーメッセージを locale 辞書に統一\n// - Adminの固定文言（見出し/ラベル/ボタン）を locale 辞書に統一\n// - 2025-08-23: 参加者ページリンクを /p → /participant に修正\n// - 2025-08-24: 公開判定/表示の整合性（publish_time_utc をJST換算、未来は未公開）を修正\n// - 2025-08-24: 賞品カードのタイトル横に参加者数バッジを追加\n// ============================================================================\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport QrCard from \"./components/admin/QrCard\";\n\nimport {\n  WRAP_STYLE,\n  CARD_STYLE,\n  INPUT_STYLE,\n  BUTTON_STYLE,\n  ERROR_BOX_STYLE,\n} from \"./ui/styles\";\n\nimport {\n  getPrizes,\n  ADMIN_KEY_STORAGE,\n  adminCreatePrize,\n  adminPublishNow,\n  adminBulkUpsertEntries,\n  adminUpsertEntry,\n} from \"./api\";\nimport { formatJstDate, jstLocalInputValue } from \"./utils/datetime\";\nimport { parseCsv } from \"./utils/csv\";\nimport PublishedBadge from \"./components/admin/PublishedBadge\";\nimport { getEntryCount } from \"./api\";\n\nimport t from \"./locale\";\n\n// 未公開優先の保存キー\nconst UNPUBLISHED_FIRST_KEY = \"distribution-lottery/admin/unpublishedFirst\";\n\n// --- 公開判定（publish_time_utc を優先、無ければ JST表記をフォールバック） ---\nfunction isPublishedJST(publishUtc, publishJst) {\n  if (publishUtc) {\n    const t = Date.parse(publishUtc); // ISO想定\n    if (!Number.isNaN(t)) return t <= Date.now();\n  }\n  if (publishJst) {\n    // \"YYYY/MM/DD HH:mm\" or \"YYYY-MM-DD HH:mm\" を JST(+09:00) として比較\n    const s = publishJst.replace(/\\//g, \"-\").replace(\" \", \"T\") + \"+09:00\";\n    const t = Date.parse(s);\n    if (!Number.isNaN(t)) return t <= Date.now();\n  }\n  return false;\n}\n\n// --- ISO(UTC) → JST 表示 \"YYYY/MM/DD HH:mm\"（ラベルは付けない）\nfunction formatJstFromUtc(utcStr) {\n  try {\n    if (!utcStr) return \"\";\n    const d = new Date(utcStr);\n    if (Number.isNaN(d.getTime())) return \"\";\n    return d\n      .toLocaleString(\"ja-JP\", {\n        timeZone: \"Asia/Tokyo\",\n        hour12: false,\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      })\n      .replace(/\\u200E/g, \"\");\n  } catch {\n    return \"\";\n  }\n}\n\n// 参加者数バッジ（各カードのタイトル横に表示）\nfunction CountBadge({ prizeId }) {\n  const [n, setN] = React.useState(null);\n  React.useEffect(() => {\n    let alive = true;\n    (async () => {\n      try {\n        const c = await getEntryCount(prizeId);\n        if (alive) setN(Number.isFinite(c) ? c : 0);\n      } catch {\n        if (alive) setN(0);\n      }\n    })();\n    return () => {\n      alive = false;\n    };\n  }, [prizeId]);\n  return (\n    <span style={{ fontSize: 12, color: \"#374151\", marginLeft: 8 }}>\n      参加者数: {n == null ? \"…\" : `${n}件`}\n    </span>\n  );\n}\n\nexport default function Admin() {\n  const [prizes, setPrizes] = useState(null);\n  const [err, setErr] = useState(\"\");\n\n  // 並べ替えオプション: 未公開を上に\n  const [unpublishedFirst, setUnpublishedFirst] = useState(() => {\n    const saved = localStorage.getItem(UNPUBLISHED_FIRST_KEY);\n    return saved === null ? true : saved === \"true\";\n  });\n\n  // 管理シークレット\n  const [adminSecret, setAdminSecret] = useState(\n    () => localStorage.getItem(ADMIN_KEY_STORAGE) || \"\",\n  );\n  useEffect(() => {\n    localStorage.setItem(ADMIN_KEY_STORAGE, adminSecret || \"\");\n  }, [adminSecret]);\n  // unpublishedFirstの保存\n  useEffect(() => {\n    localStorage.setItem(UNPUBLISHED_FIRST_KEY, String(unpublishedFirst));\n  }, [unpublishedFirst]);\n\n  // 新規作成フォーム\n  const [newId, setNewId] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newJst, setNewJst] = useState(() => jstLocalInputValue(60));\n  const [creating, setCreating] = useState(false);\n  const [createMsg, setCreateMsg] = useState(\"\");\n\n  // CSV一括投入\n  const [csvPrizeId, setCsvPrizeId] = useState(\"\");\n  const [csvResult, setCsvResult] = useState(null);\n  const [csvBusy, setCsvBusy] = useState(false);\n  const [conflictPolicy, setConflictPolicy] = useState(\"ignore\"); // ignore|upsert\n  const [csvFileName, setCsvFileName] = useState(\"\");\n\n  // 単票 UPSERT（手動）\n  const [uPrizeId, setUPrizeId] = useState(\"\");\n  const [uEntryNumber, setUEntryNumber] = useState(\"\");\n  const [uPassword, setUPassword] = useState(\"\");\n  const [uIsWinner, setUIsWinner] = useState(false);\n  const [uBusy, setUBusy] = useState(false);\n  const [uMsg, setUMsg] = useState(\"\");\n\n  // 読み込み\n  const loadPrizes = async () => {\n    try {\n      const data = await getPrizes();\n      setPrizes(Array.isArray(data) ? data : []);\n      setErr(\"\");\n    } catch (e) {\n      setErr(String(e?.message || e));\n      setPrizes([]);\n    }\n  };\n  useEffect(() => {\n    loadPrizes();\n  }, []);\n\n  // 軽量トースト通知（固定下部）\n  const [toast, setToast] = useState(null); // { text, kind }\n  const showToast = (text, kind = \"info\") => {\n    setToast({ text, kind });\n    window.clearTimeout(showToast._t);\n    showToast._t = window.setTimeout(() => setToast(null), 2200);\n  };\n\n  // 賞品作成（管理API）\n  const createPrize = async (e) => {\n    e.preventDefault();\n    setCreating(true);\n    setCreateMsg(\"\");\n    try {\n      if (!newId || !newName || !newJst)\n        throw new Error(\"ID/名前/公開日時は必須です。\");\n      const jstStr = newJst.replace(\"T\", \" \");\n      await adminCreatePrize({\n        id: newId.trim(),\n        name: newName.trim(),\n        result_time_jst: jstStr,\n      });\n      setCreateMsg(t(\"admin.toast.createSuccess\"));\n      setNewId(\"\");\n      setNewName(\"\");\n      setNewJst(jstLocalInputValue(60));\n      await loadPrizes();\n    } catch (e2) {\n      setCreateMsg(`${t(\"common.errorPrefix\")}${e2.message}`);\n    } finally {\n      setCreating(false);\n    }\n  };\n\n  // すぐ公開ボタン\n  const publishNow = async (id) => {\n    if (!id) return;\n    try {\n      const j = await adminPublishNow(id);\n      showToast(\n        t(\n          \"admin.toast.publishUpdated\",\n          formatJstDate(j.jst_view_from_utc).replace(\"公開日: \", \"\"),\n        ),\n        \"success\",\n      );\n      await loadPrizes();\n    } catch (e) {\n      showToast(t(\"admin.toast.publishFail\"), \"error\");\n    }\n  };\n\n  // CSV一括投入（JSONボディ版）\n  const onCsvSelected = async (file) => {\n    setCsvResult(null);\n    if (!csvPrizeId) {\n      alert(\"先に対象の賞品IDを選択してください。\");\n      return;\n    }\n    if (!file) {\n      setCsvFileName(\"\");\n      return;\n    }\n    setCsvFileName(file.name);\n    setCsvBusy(true);\n    try {\n      const text = await file.text();\n      const rows = parseCsv(text);\n      if (rows.length === 0)\n        throw new Error(\"CSVの内容が空です。ヘッダ行とデータ行が必要です。\");\n      const data = await adminBulkUpsertEntries({\n        prize_id: csvPrizeId,\n        rows,\n        onConflict: conflictPolicy,\n      });\n      setCsvResult(data);\n      const summary = `追加:${data.inserted ?? 0} 更新:${data.updated ?? 0} スキップ:${data.skipped ?? 0}`;\n      showToast(t(\"admin.toast.csvResult\", summary), \"success\");\n    } catch (e) {\n      setCsvResult({ error: e.message });\n      showToast(t(\"admin.toast.csvFail\"), \"error\");\n    } finally {\n      setCsvBusy(false);\n    }\n  };\n\n  const prizeOptions = useMemo(\n    () => (Array.isArray(prizes) ? prizes : []),\n    [prizes],\n  );\n\n  const downloadSampleCsv = () => {\n    const sample =\n      \"entry_number,password,is_winner\\n001,1111,true\\n002,2222,false\\n\";\n    const blob = new Blob([sample], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"entries_sample.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // 単票 UPSERT（手動）\n  const upsertEntryManual = async () => {\n    setUBusy(true);\n    setUMsg(\"\");\n    try {\n      if (!uPrizeId || !uEntryNumber || !uPassword)\n        throw new Error(\"賞品ID / 抽選番号 / パスワード を入力してください\");\n      const body = {\n        prize_id: uPrizeId.trim(),\n        entry_number: uEntryNumber.trim(),\n        password: uPassword,\n        is_winner: !!uIsWinner,\n      };\n      const j = await adminUpsertEntry(body);\n      setUMsg(\n        `${t(\"admin.toast.upsertSuccess\")} id=${j.id} / ${j.entry_number} → ${j.is_winner ? \"当選\" : \"落選\"}`,\n      );\n      showToast(t(\"admin.toast.upsertSuccess\"), \"success\");\n    } catch (e) {\n      setUMsg(`${t(\"common.errorPrefix\")}${e.message}`);\n      showToast(t(\"admin.toast.upsertFail\"), \"error\");\n    } finally {\n      setUBusy(false);\n    }\n  };\n\n  /** 並べ替え済みの賞品配列を計算（未公開→公開、次に公開日時が近い順） */\n  const sortedPrizes = useMemo(() => {\n    if (!Array.isArray(prizes)) return [];\n    const arr = [...prizes];\n    if (!unpublishedFirst) return arr;\n    const ts = (p) => {\n      const t = Date.parse(p.publish_time_utc || \"\");\n      return Number.isNaN(t) ? Infinity : t;\n    };\n    return arr.sort((a, b) => {\n      const ap = isPublishedJST(\n        a.publish_time_utc,\n        a.result_time_jst || a.publish_time_jst,\n      );\n      const bp = isPublishedJST(\n        b.publish_time_utc,\n        b.result_time_jst || b.publish_time_jst,\n      );\n      // 未公開を先に\n      if (ap !== bp) return ap ? 1 : -1;\n      // 同じ公開状態なら公開予定(または実際の)時刻が近い順\n      return ts(a) - ts(b);\n    });\n  }, [prizes, unpublishedFirst]);\n\n  return (\n    <>\n      <style>{`\n        input, select, button {\n          outline: none;\n        }\n        input:focus, select:focus, button:focus {\n          outline: 2px solid #93c5fd;\n          outline-offset: 2px;\n        }\n        /* iOS Safari の日時入力が親枠をはみ出す対策 */\n        input[type=\"datetime-local\"] {\n          max-width: 100%;\n          width: 100%;\n          min-width: 0;\n          -webkit-appearance: none;\n          appearance: none;\n        }\n      `}</style>\n      <div style={WRAP_STYLE}>\n        <h2>{t(\"admin.title.prizeList\")}</h2>\n\n        {/* 並べ替えオプション */}\n        <div style={{ marginBottom: 12 }}>\n          <label style={{ userSelect: \"none\" }}>\n            <input\n              type=\"checkbox\"\n              checked={unpublishedFirst}\n              onChange={(e) => setUnpublishedFirst(e.target.checked)}\n            />\n            &nbsp;{t(\"admin.label.unpublishedFirst\")}\n          </label>\n        </div>\n\n        {/* 管理シークレット入力 */}\n        <section style={CARD_STYLE}>\n          <label style={{ display: \"block\" }}>\n            {t(\"admin.label.secret\")}\n            <input\n              type=\"password\"\n              value={adminSecret}\n              onChange={(e) => setAdminSecret(e.target.value)}\n              placeholder={t(\"admin.placeholder.secret\")}\n              style={{ ...INPUT_STYLE, marginTop: 8, maxWidth: 360 }}\n            />\n          </label>\n          <div style={{ fontSize: 12, color: \"#555\", marginTop: 6 }}>\n            {t(\"admin.help.secret\")}\n          </div>\n        </section>\n\n        {err && <div style={ERROR_BOX_STYLE}>エラー: {err}</div>}\n\n        {/* 賞品作成 */}\n        <section style={CARD_STYLE}>\n          <h3>{t(\"admin.title.createPrize\")}</h3>\n          <form onSubmit={createPrize} style={{ display: \"grid\", gap: 8 }}>\n            <label>\n              {t(\"admin.label.prizeId\")}\n              <input\n                value={newId}\n                onChange={(e) => setNewId(e.target.value)}\n                placeholder={t(\"admin.placeholder.prizeId\")}\n                required\n                style={INPUT_STYLE}\n              />\n            </label>\n            <label>\n              {t(\"admin.label.prizeName\")}\n              <input\n                value={newName}\n                onChange={(e) => setNewName(e.target.value)}\n                placeholder={t(\"admin.placeholder.prizeName\")}\n                required\n                style={INPUT_STYLE}\n              />\n            </label>\n            <label>\n              {t(\"admin.label.publishAt\")}\n              <input\n                type=\"datetime-local\"\n                value={newJst}\n                onChange={(e) => setNewJst(e.target.value)}\n                required\n                style={INPUT_STYLE}\n              />\n            </label>\n            <small style={{ color: \"#555\" }}>\n              {t(\"admin.hint.defaultTime\")}\n            </small>\n            <div>\n              <button type=\"submit\" disabled={creating} style={BUTTON_STYLE}>\n                {creating\n                  ? t(\"admin.button.creating\")\n                  : t(\"admin.button.create\")}\n              </button>\n              {createMsg && (\n                <span style={{ marginLeft: 8, fontSize: 12 }}>{createMsg}</span>\n              )}\n            </div>\n          </form>\n        </section>\n\n        {/* CSV一括投入 */}\n        <section style={CARD_STYLE}>\n          <h3>{t(\"admin.title.csvUpload\")}</h3>\n          <div\n            style={{\n              display: \"flex\",\n              gap: 8,\n              alignItems: \"center\",\n              flexWrap: \"wrap\",\n              marginBottom: 8,\n            }}\n          >\n            <label>\n              {t(\"admin.label.targetPrizeId\")}\n              <select\n                value={csvPrizeId}\n                onChange={(e) => setCsvPrizeId(e.target.value)}\n                style={{ ...INPUT_STYLE, marginLeft: 8 }}\n              >\n                <option value=\"\">{t(\"admin.option.selectPrize\")}</option>\n                {prizeOptions.map((p) => (\n                  <option key={p.id} value={p.id}>\n                    {p.id} / {p.name}\n                  </option>\n                ))}\n              </select>\n            </label>\n            <label>\n              {t(\"admin.label.conflictPolicy\")}\n              <select\n                value={conflictPolicy}\n                onChange={(e) => setConflictPolicy(e.target.value)}\n                style={{ ...INPUT_STYLE, marginLeft: 8 }}\n              >\n                <option value=\"ignore\">{t(\"admin.option.ignore\")}</option>\n                <option value=\"upsert\">{t(\"admin.option.upsert\")}</option>\n              </select>\n            </label>\n            {/* ファイル選択（ブラウザデフォルトに戻す） */}\n            <input\n              type=\"file\"\n              accept=\".csv,text/csv\"\n              disabled={csvBusy}\n              onChange={(e) => onCsvSelected(e.target.files?.[0])}\n            />\n            {csvFileName && (\n              <span style={{ fontSize: 12, color: \"#555\" }}>{csvFileName}</span>\n            )}\n            <button\n              type=\"button\"\n              onClick={downloadSampleCsv}\n              style={BUTTON_STYLE}\n            >\n              {t(\"admin.button.downloadSampleCsv\")}\n            </button>\n          </div>\n          <div style={{ fontSize: 12, color: \"#555\", lineHeight: 1.6 }}>\n            {t(\"admin.help.csvFormat\")}\n            <pre\n              style={{ background: \"#f7f7f7\", padding: 8, overflowX: \"auto\" }}\n            >\n              {`entry_number,password,is_winner\n001,1111,true\n002,2222,false`}\n            </pre>\n          </div>\n          {csvBusy && <div>{t(\"admin.state.uploading\")}</div>}\n          {csvResult && !csvResult.error && (\n            <div style={{ fontSize: 13 }}>\n              追加: {csvResult.inserted ?? 0} / 更新: {csvResult.updated ?? 0} /\n              スキップ: {csvResult.skipped ?? 0}\n              {csvResult.errors?.length > 0 && (\n                <details style={{ marginTop: 6 }}>\n                  <summary>詳細エラー（{csvResult.errors.length}件）</summary>\n                  <ul>\n                    {csvResult.errors.map((e, i) => (\n                      <li key={i}>\n                        行 {e.rowIndex + 2}: {e.message}\n                      </li>\n                    ))}\n                  </ul>\n                </details>\n              )}\n            </div>\n          )}\n          {csvResult && csvResult.error && (\n            <div style={{ color: \"red\" }}>\n              {t(\"common.errorPrefix\")}\n              {csvResult.error}\n            </div>\n          )}\n        </section>\n\n        {/* 単票 UPSERT（CSVなしで手動） */}\n        <section style={CARD_STYLE}>\n          <h3>{t(\"admin.title.upsertManual\")}</h3>\n          <div style={{ display: \"grid\", gap: 8 }}>\n            <label>\n              {t(\"admin.label.prizeIdShort\")}\n              <input\n                value={uPrizeId}\n                onChange={(e) => setUPrizeId(e.target.value)}\n                placeholder=\"B001\"\n                style={INPUT_STYLE}\n              />\n            </label>\n            <label>\n              {t(\"admin.label.entryNumber\")}\n              <input\n                value={uEntryNumber}\n                onChange={(e) => setUEntryNumber(e.target.value)}\n                placeholder=\"001\"\n                style={INPUT_STYLE}\n              />\n            </label>\n            <label>\n              {t(\"admin.label.password\")}\n              <input\n                value={uPassword}\n                onChange={(e) => setUPassword(e.target.value)}\n                style={INPUT_STYLE}\n              />\n            </label>\n            <label style={{ userSelect: \"none\" }}>\n              <input\n                type=\"checkbox\"\n                checked={uIsWinner}\n                onChange={(e) => setUIsWinner(e.target.checked)}\n              />\n              &nbsp;{t(\"admin.label.isWinner\")}\n            </label>\n            <div>\n              <button\n                type=\"button\"\n                disabled={uBusy}\n                onClick={upsertEntryManual}\n                style={BUTTON_STYLE}\n              >\n                {uBusy ? t(\"admin.button.sending\") : t(\"admin.button.upsert\")}\n              </button>\n              {uMsg && (\n                <span style={{ marginLeft: 8, fontSize: 12 }}>{uMsg}</span>\n              )}\n            </div>\n          </div>\n        </section>\n\n        {/* 賞品リスト */}\n        <section style={CARD_STYLE}>\n          {prizes === null && <p>{t(\"common.loading\")}</p>}\n          {Array.isArray(prizes) && prizes.length === 0 && (\n            <p>{t(\"admin.state.noPrizes\")}</p>\n          )}\n          {Array.isArray(prizes) && prizes.length > 0 && (\n            <ul style={{ paddingLeft: 16 }}>\n              {sortedPrizes.map((p) => {\n                const publishAtText = p.publish_time_utc\n                  ? `公開日: ${formatJstFromUtc(p.publish_time_utc)}`\n                  : formatJstDate(p.result_time_jst);\n                const published = isPublishedJST(\n                  p.publish_time_utc,\n                  p.result_time_jst || p.publish_time_jst,\n                );\n                return (\n                  <li\n                    key={p.id}\n                    style={{\n                      marginBottom: 16,\n                      listStyle: \"none\",\n                      padding: 16,\n                      border: \"1px solid #eee\",\n                      borderRadius: 8,\n                    }}\n                  >\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        gap: 16,\n                        flexWrap: \"wrap\",\n                      }}\n                    >\n                      <div>\n                        <div style={{ fontSize: 16, fontWeight: 600 }}>\n                          <span style={{ fontFamily: \"monospace\" }}>\n                            {p.id}\n                          </span>{\" \"}\n                          {p.name}\n                          <PublishedBadge published={published} />\n                          <CountBadge prizeId={p.id} />\n                        </div>\n                        <div>{publishAtText}</div>\n                        <div\n                          style={{\n                            marginTop: 8,\n                            display: \"flex\",\n                            gap: 8,\n                            alignItems: \"center\",\n                            flexWrap: \"wrap\",\n                          }}\n                        >\n                          <Link\n                            to={`/participant?prizeId=${encodeURIComponent(p.id)}`}\n                          >\n                            {t(\"admin.link.participantPage\")}\n                          </Link>\n                          <button\n                            type=\"button\"\n                            onClick={() => publishNow(p.id)}\n                            style={BUTTON_STYLE}\n                          >\n                            {t(\"admin.button.publishNow\")}\n                          </button>\n                        </div>\n                      </div>\n                      <QrCard prize={p} />\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </section>\n        {/* トースト通知 */}\n        {toast && (\n          <div\n            style={{\n              position: \"fixed\",\n              left: 0,\n              bottom: 0,\n              width: \"100vw\",\n              zIndex: 1100,\n              display: \"flex\",\n              justifyContent: \"center\",\n              pointerEvents: \"none\",\n            }}\n          >\n            <div\n              style={{\n                background:\n                  toast.kind === \"error\"\n                    ? \"#fee2e2\"\n                    : toast.kind === \"success\"\n                      ? \"#dcfce7\"\n                      : \"#f1f5f9\",\n                color:\n                  toast.kind === \"error\"\n                    ? \"#b91c1c\"\n                    : toast.kind === \"success\"\n                      ? \"#065f46\"\n                      : \"#334155\",\n                border:\n                  toast.kind === \"error\"\n                    ? \"1px solid #fca5a5\"\n                    : toast.kind === \"success\"\n                      ? \"1px solid #86efac\"\n                      : \"1px solid #cbd5e1\",\n                borderRadius: 8,\n                margin: 16,\n                padding: \"16px 24px\",\n                fontSize: 15,\n                boxShadow: \"0 2px 8px rgba(0,0,0,0.06)\",\n                pointerEvents: \"auto\",\n              }}\n            >\n              {toast.text}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","// ============================================================================\n// File: frontend/src/utils/csv.js\n// Version: v0.1_001 (2025-08-21)\n// ============================================================================\n// 仕様:\n// - 参加者エントリーCSVのパース（entry_number,password,is_winner）\n// ============================================================================\n// 履歴（直近のみ）:\n// - 初版作成（Admin.jsx から切り出し）\n// ============================================================================\n\n/** CSVを配列に（ヘッダ: entry_number,password,is_winner） */\nexport function parseCsv(text) {\n  const lines = text.split(/\\r?\\n/).filter(Boolean);\n  if (lines.length === 0) return [];\n  const headers = lines[0].split(\",\").map((s) => s.trim());\n  const idx_en = headers.indexOf(\"entry_number\");\n  const idx_pw = headers.indexOf(\"password\");\n  const idx_win = headers.indexOf(\"is_winner\");\n  const rows = [];\n  for (let i = 1; i < lines.length; i++) {\n    const cols = lines[i].split(\",\");\n    const en = (cols[idx_en] ?? \"\").trim();\n    const pw = (cols[idx_pw] ?? \"\").trim();\n    const winRaw = (cols[idx_win] ?? \"\").trim().toLowerCase();\n    const win = [\"true\", \"1\", \"yes\", \"y\", \"t\"].includes(winRaw);\n    if (en || pw) rows.push({ entry_number: en, password: pw, is_winner: win });\n  }\n  return rows;\n}\n","// ============================================================================\n// File: frontend/src/locale/ja.js\n// Version: v0.1_007 (2025-08-26)\n// ============================================================================\n// 仕様:\n// - 日本語ロケール定義\n// - 画面文言やメッセージを集約\n// ============================================================================\n// 履歴（直近のみ）:\n// - 2025-08-26: participant.resultPrefix をフラグ切替対応（REACT_APP_FLAGS=participant_text_v2）\n// - 新規作成\n// - QRPage/Participant 固定文言の辞書キーを追加\n// - 2025-08-23: QRPage 用の辞書キー（submit / entryPlaceholder / passwordPlaceholder）を追加\n// - 2025-08-23: qr.prizeIdPrefix を追加\n// - 2025-08-24: participant のエイリアスキー（prizeIdPrefix / prizeNamePrefix / publishedAtJST / entryPlaceholder / passwordPlaceholder / submit）を追加\n// - 2025-08-24: admin.title.csvUpload と admin.hint.defaultTime を追加\n// ============================================================================\n\nconst ja = {\n  app: {\n    title: \"配布抽選システム\",\n    nav: {\n      prizes: \"抽選予定（参加者向け）\",\n      adminList: \"管理：賞品一覧・作成\",\n      adminDebug: \"（開発者向け）デバッグ\",\n    },\n  },\n  prizes: {\n    title: \"抽選予定（参加者向け）\",\n    note: \"公開日時（JST）以降に、各賞品ページで抽選結果を確認できます。\",\n    empty:\n      \"現在、公開予定の抽選はありません。しばらくしてから再度ご確認ください。\",\n    publishAt: (txt) => `公開日時（JST）: ${txt}`,\n    openParticipant: \"参加者ページを開く\",\n    saveQrPng: \"QRコードをPNGで保存\",\n    errorNetwork:\n      \"ネットワークエラーが発生しました。時間をおいて再度お試しください。\",\n    errorGeneric: \"取得に失敗しました。時間をおいて再度お試しください。\",\n  },\n  participant: {\n    title: \"抽選結果確認\",\n    resultPrefix: (process.env.REACT_APP_FLAGS || \"\").includes(\n      \"participant_text_v2\",\n    )\n      ? \"当落結果：\"\n      : \"結果：\",\n    // --- aliases for components that reference flat keys ---\n    prizeIdPrefix: \"賞品ID\",\n    prizeNamePrefix: \"賞品名\",\n    publishedAtJST: \"公開日時（JST）\",\n    entryPlaceholder: \"抽選番号（例: 001）\",\n    passwordPlaceholder: \"パスワード（例: 1111）\",\n    submit: \"抽選結果を確認する\",\n    labels: {\n      entryNumber: \"エントリー番号\",\n      password: \"パスワード\",\n    },\n    hint: \"エントリー番号とパスワードは配布物のQRコード横をご確認ください。\",\n    check: \"結果を確認する\",\n    result: {\n      win: (name) => `🎉 おめでとうございます！「${name}」に当選しました！`,\n      lose: (name) => `残念ながら「${name}」には当選しませんでした。`,\n      notPublished:\n        \"抽選結果はまだ公開されていません。公開日時（JST）以降に再度お試しください。\",\n      notFound:\n        \"エントリーが見つかりません。番号とパスワードをご確認ください。\",\n      required: \"エントリー番号とパスワードを入力してください。\",\n    },\n    form: {\n      intro: \"抽選番号とパスワードを入力して結果を確認してください。\",\n      entryPlaceholder: \"抽選番号（例: 001）\",\n      passwordPlaceholder: \"パスワード（例: 1111）\",\n      submit: \"抽選結果を確認する\",\n    },\n    state: {\n      noData: \"データがありません。\",\n    },\n    prefix: {\n      result: \"結果：\",\n      prizeId: \"賞品ID：\",\n    },\n  },\n  qr: {\n    title: \"QRページ\",\n    prizeIdPrefix: \"賞品ID\",\n    entryPlaceholder: \"抽選番号（例: 001）\",\n    passwordPlaceholder: \"パスワード（例: 1111）\",\n    submit: \"抽選結果を確認する\",\n    errorNetwork:\n      \"ネットワークエラーが発生しました。時間をおいて再度お試しください。\",\n    errorGeneric: \"処理に失敗しました。時間をおいて再度お試しください。\",\n  },\n  admin: {\n    title: {\n      prizeList: \"管理：賞品一覧・作成\",\n      createPrize: \"賞品の新規作成\",\n      upsertManual: \"単票 UPSERT（手動）\",\n      csvUpload: \"参加者エントリー一括投入（CSV）\",\n    },\n    label: {\n      secret: \"管理シークレット（ADMIN_SECRET）\",\n      unpublishedFirst: \"未公開を上に並べ替える\",\n      prizeId: \"賞品ID（例: B002）\",\n      prizeName: \"賞品名\",\n      publishAt: \"公開日時（JST）\",\n      targetPrizeId: \"対象の賞品ID\",\n      conflictPolicy: \"重複時の動作\",\n      prizeIdShort: \"賞品ID\",\n      entryNumber: \"抽選番号\",\n      password: \"パスワード\",\n      isWinner: \"当選\",\n    },\n    placeholder: {\n      secret: \"ここに管理シークレットを入力（ローカル保存）\",\n      prizeId: \"B002\",\n      prizeName: \"○○賞\",\n    },\n    help: {\n      secret:\n        \"ブラウザの <code>localStorage</code> に保存され、管理API呼び出し時に <code>x-admin-secret</code> ヘッダで送信されます。\",\n      csvFormat: \"CSVフォーマット（1行目は必ずヘッダ）：\",\n      defaultTime: \"ヒント：初期値は現時間＋1時間（JST）の表記です。\",\n    },\n    hint: { defaultTime: \"ヒント：初期値は現時間＋1時間（JST）の表記です。\" },\n    button: {\n      creating: \"作成中…\",\n      create: \"作成する\",\n      downloadSampleCsv: \"サンプルCSVを保存\",\n      sending: \"送信中…\",\n      upsert: \"UPSERT 実行\",\n      publishNow: \"公開時刻を今にする\",\n    },\n    option: {\n      selectPrize: \"-- 選択してください --\",\n      ignore: \"既存を維持（新規のみ追加）\",\n      upsert: \"上書き（パスワード/当落を更新）\",\n    },\n    state: {\n      uploading: \"アップロード中…\",\n      noPrizes: \"賞品がありません。\",\n    },\n    link: {\n      participantPage: \"参加者ページを開く\",\n    },\n    create: {\n      section: \"賞品の新規作成\",\n      id: \"賞品ID（例: B002）\",\n      name: \"賞品名\",\n      publishAt: \"公開日時（JST）※現在時刻＋1時間が初期値\",\n      submit: \"賞品を作成\",\n    },\n    csv: {\n      section: \"参加者エントリーの一括投入（CSV）\",\n      prizeId: \"対象の賞品ID（例: B001）\",\n      modeKeep: \"既存を維持（新規のみ追加）\",\n      sampleTitle: \"CSVフォーマット（1行目は必ずヘッダ）：\",\n      sampleCode:\n        \"entry_number,password,is_winner\\n001,1111,true\\n002,2222,false\",\n    },\n    card: {\n      publishAt: (txt) => `公開日時（JST）: ${txt}`,\n      openParticipant: \"参加者ページを開く\",\n      saveQrPng: \"QRコードをPNGで保存\",\n      edit: \"編集\",\n    },\n    edit: {\n      title: \"管理：賞品編集\",\n      name: \"賞品名\",\n      publishAt: \"公開日時（JST）\",\n      save: \"変更を保存\",\n      delete: \"この賞品を削除\",\n      confirmDelete: \"本当に削除しますか？参加者エントリーも削除されます。\",\n    },\n    toast: {\n      saved: \"保存しました。\",\n      created: \"作成しました。\",\n      imported: \"CSVを取り込みました。\",\n      authFail: \"認証に失敗しました。管理シークレットを確認してください。\",\n      network: \"通信エラーが発生しました。時間をおいて再度お試しください。\",\n      invalid: \"入力内容に誤りがあります。赤い項目を修正してください。\",\n      createSuccess: \"作成しました。\",\n      createFail: \"作成に失敗しました。\",\n      publishUpdated: (txt) => `公開時刻を更新: ${txt}`,\n      publishFail: \"公開に失敗しました。\",\n      csvResult: (msg) => `CSV処理結果: ${msg}`,\n      csvFail: \"CSVの処理に失敗しました。\",\n      upsertSuccess: \"登録しました。\",\n      upsertFail: \"登録に失敗しました。\",\n      secretSaved: \"管理者シークレットを保存しました。\",\n      secretCleared: \"管理者シークレットを削除しました。\",\n    },\n  },\n  common: {\n    required: \"必須\",\n    cancel: \"キャンセル\",\n    close: \"閉じる\",\n    loading: \"読み込み中です…\",\n    retry: \"再読み込み\",\n    errorPrefix: \"エラー: \",\n    network:\n      \"ネットワークエラーが発生しました。時間をおいて再度お試しください。\",\n    server: \"サーバーでエラーが発生しました。時間をおいて再度お試しください。\",\n  },\n  format: {\n    // 例: format.publishJst(\"2025/08/19 13:00\")\n    publishJst: (txt) => `公開日時（JST）: ${txt}`,\n  },\n};\n\nexport default ja;\n","// ============================================================================\n// File: frontend/src/locale/index.js\n// Version: v0.1_001 (2025-08-21)\n// ============================================================================\n// 仕様:\n// - 日本語ロケール用の t 関数を提供\n// - 与えられたパス文字列を ja オブジェクトから辿って翻訳を取得\n// - 関数の場合は引数を渡して評価\n// ============================================================================\n// 履歴（直近のみ）:\n// - 新規作成\n// ============================================================================\n// frontend/src/locale/index.js\nimport ja from \"./ja\";\n\n// 単純な t 関数（今回は日本語固定）\nexport const t = (path, ...args) => {\n  const segs = path.split(\".\");\n  let cur = ja;\n  for (const s of segs) {\n    if (cur == null) return path;\n    cur = cur[s];\n  }\n  if (typeof cur === \"function\") return cur(...args);\n  return cur ?? path;\n};\n\n// --- compatibility export (named + default) ---\nexport default t;\n"],"names":["WRAP_STYLE","maxWidth","width","margin","padding","boxSizing","CARD_STYLE","border","borderRadius","marginBottom","background","INPUT_STYLE","minWidth","minHeight","fontSize","BUTTON_STYLE","lineHeight","cursor","color","textDecoration","display","ERROR_BOX_STYLE","_objectSpread","api","axios","create","baseURL","process","timeout","withCredentials","ADMIN_KEY_STORAGE","async","adminFetch","path","method","headers","body","arguments","length","undefined","adminKey","localStorage","getItem","_","getAdminSecret","h","request","url","data","e","_e$response","_e$response$data","msg","response","error","message","String","Error","sleep","ms","Promise","r","setTimeout","requestWithRetry","fn","retries","backoff","attempt","_e$response2","status","isNetwork","Math","pow","getPrizes","get","getEntryCount","prizeId","_res$data","res","params","prize_id","count","_e","_list$data","list","Array","isArray","items","_res$data2","concat","encodeURIComponent","checkResult","_ref","_ref2","_ref3","entryNumber","entry_number","password","post","adminCreatePrize","_ref4","id","name","result_time_jst","JSON","stringify","adminPublishNow","adminBulkUpsertEntries","_ref5","rows","onConflict","adminUpsertEntry","formatJstDate","str","datePart","timePartRaw","trim","split","y","m","d","timePart","slice","_unused","jstLocalInputValue","offsetMinutes","jstMs","Date","getTime","jst","getUTCFullYear","getUTCMonth","padStart","getUTCDate","hh","getUTCHours","mm","getUTCMinutes","QrCard","prize","participantUrl","window","location","origin","_jsxs","style","textAlign","children","_jsx","QRCode","value","size","marginTop","onClick","qrPngDataUrl","QR","errorCorrectionLevel","scale","img","Image","onload","qrTarget","canvas","document","createElement","height","ctx","getContext","imageSmoothingEnabled","fillStyle","fillRect","x","extraTextLines","drawImage","font","fillText","textYStart","pngUrl","toDataURL","a","href","download","click","onerror","alert","src","console","PublishedBadge","published","base","marginLeft","verticalAlign","UNPUBLISHED_FIRST_KEY","isPublishedJST","publishUtc","publishJst","t","parse","Number","isNaN","now","s","replace","CountBadge","n","setN","React","alive","c","isFinite","_unused2","Admin","_csvResult$inserted","_csvResult$updated","_csvResult$skipped","_csvResult$errors","prizes","setPrizes","useState","err","setErr","unpublishedFirst","setUnpublishedFirst","saved","adminSecret","setAdminSecret","useEffect","setItem","newId","setNewId","newName","setNewName","newJst","setNewJst","creating","setCreating","createMsg","setCreateMsg","csvPrizeId","setCsvPrizeId","csvResult","setCsvResult","csvBusy","setCsvBusy","conflictPolicy","setConflictPolicy","csvFileName","setCsvFileName","uPrizeId","setUPrizeId","uEntryNumber","setUEntryNumber","uPassword","setUPassword","uIsWinner","setUIsWinner","uBusy","setUBusy","uMsg","setUMsg","loadPrizes","toast","setToast","showToast","text","kind","clearTimeout","_t","onCsvSelected","file","_data$inserted","_data$updated","_data$skipped","lines","filter","Boolean","map","idx_en","indexOf","idx_pw","idx_win","i","_cols$idx_en","_cols$idx_pw","_cols$idx_win","cols","en","pw","winRaw","toLowerCase","win","includes","push","is_winner","parseCsv","summary","inserted","updated","skipped","prizeOptions","useMemo","sortedPrizes","arr","ts","p","publish_time_utc","Infinity","sort","b","ap","publish_time_jst","_Fragment","userSelect","type","checked","onChange","target","placeholder","onSubmit","preventDefault","jstStr","e2","gap","required","disabled","alignItems","flexWrap","accept","_e$target$files","files","downloadSampleCsv","blob","Blob","URL","createObjectURL","revokeObjectURL","overflowX","errors","rowIndex","j","paddingLeft","publishAtText","utcStr","toLocaleString","timeZone","hour12","year","month","day","hour","minute","formatJstFromUtc","listStyle","justifyContent","fontWeight","fontFamily","Link","to","jst_view_from_utc","publishNow","position","left","bottom","zIndex","pointerEvents","boxShadow","app","title","nav","adminList","adminDebug","note","empty","publishAt","txt","openParticipant","saveQrPng","errorNetwork","errorGeneric","participant","resultPrefix","prizeIdPrefix","prizeNamePrefix","publishedAtJST","entryPlaceholder","passwordPlaceholder","submit","labels","hint","check","result","lose","notPublished","notFound","form","intro","state","noData","prefix","qr","admin","prizeList","createPrize","upsertManual","csvUpload","label","secret","prizeName","targetPrizeId","prizeIdShort","isWinner","help","csvFormat","defaultTime","button","sending","upsert","option","selectPrize","ignore","uploading","noPrizes","link","participantPage","section","csv","modeKeep","sampleTitle","sampleCode","card","edit","save","delete","confirmDelete","created","imported","authFail","network","invalid","createSuccess","createFail","publishUpdated","publishFail","csvFail","upsertSuccess","upsertFail","secretSaved","secretCleared","common","cancel","close","loading","retry","errorPrefix","server","format","_cur","segs","cur","ja","_len","args","_key"],"sourceRoot":""}